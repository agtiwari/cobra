version: "3"
services:
  web:
    #
    # Publish to this node with:
    # cobra publish --rolesecret A0EF82AFedB52Eae16b7b3dB8dcCE5bc
    #
    image: ${DOCKER_REPO}/cobra:${TAG}
    ports:
      - "8765:8765"
    environment:
      # FIXME: second nodes in urls are not used
      - COBRA_REDIS_URLS=redis://redis1
      - COBRA_HOST=0.0.0.0
      - COBRA_PORT=8765
      - COBRA_VERBOSE=1
      - COBRA_APPS_CONFIG_CONTENT=H4sICPuYRF4AA2Zvby55YW1sAM2SS46DMAxA9z1FLjBSEhoauguQXGOUjyMiUYrioF5/YGYxWXAAvLKfJdtPsl1XfN4I+bbhlZYjIyS/Z8C/lJCKH7FCfiXE9F7wH34R3Bz6nBxUbFvO6Lq5OeFUkd8NVZ3Bhqr85FTqAQFmqACCz1CepBE22IEKGrmkxijBIm+6KPnIVctUezhOYOcynUjWjUtbOsceOnZj7HqI1GjfSm2piYzeR2XYcFjuu/eTTizrxqUtFdVGcmUg9IJrC6x1D9eEXgY/aOH8YYnFFjyRrPilHY13ofXBcNNTqvQo/d15CGr/YeAistsPbCiZW5oDAAA=
      - PYTHONUNBUFFERED=1
      - COBRA_PLUGINS=republish
      - PYTHONPATH=/etc/secret-volume
    healthcheck:
      #
      # Run healthcheck externally with:
      # cobra health --rolesecret bb17Ef9Df9Bef0FEc68Ea0Ff104DAF1C
      #
      interval: 30s
    volumes:
      #
      # To run in an environment similar to kubernete:
      # 1. mkdir /tmp/volume_cobra
      # 2. make sure /tmp is 'mountable' in Docker desktop
      # 3. run: cobra init
      # 4. cp $HOME/.cobra.yaml /tmp/volume_cobra/apps.yaml
      #    That file will be seen as /etc/secret-volume/apps.yaml in the container ran by docker-compose
      #
      # Alternatively, you can set COBRA_APPS_CONFIG_CONTENT.
      # Note: we could set ${PWD} for the local (dev machine) folder to be mounted, and check-in a cobra config file
      #
      - /tmp/volume_cobra:/etc/secret-volume
    depends_on:
      - redis1
      - redis2

  redis1:
    #ports:
    #  - "10000:6379"
    image: redis:alpine

  redis2:
    image: redis:alpine
